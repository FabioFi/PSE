

================================================================
== Vivado HLS Report for 'xtea'
================================================================
* Date:           Tue Oct  1 18:41:06 2019

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        xtea_cpp_hls
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     7.656|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   66|   66|   66|   66|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |   64|   64|         2|          -|          -|    32|    no    |
        |- Loop 2  |   64|   64|         2|          -|          -|    32|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 4 
2 --> 3 6 
3 --> 2 
4 --> 5 6 
5 --> 4 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %word0) nounwind, !map !26"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %word1) nounwind, !map !32"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %key0) nounwind, !map !36"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %key1) nounwind, !map !40"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %key2) nounwind, !map !44"   --->   Operation 11 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %key3) nounwind, !map !48"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1 %mode) nounwind, !map !52"   --->   Operation 13 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %result0) nounwind, !map !56"   --->   Operation 14 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %result1) nounwind, !map !60"   --->   Operation 15 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([5 x i8]* @xtea_str) nounwind"   --->   Operation 16 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%mode_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %mode) nounwind" [xtea.cpp:28]   --->   Operation 17 'read' 'mode_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%key3_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %key3) nounwind" [xtea.cpp:28]   --->   Operation 18 'read' 'key3_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%key2_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %key2) nounwind" [xtea.cpp:28]   --->   Operation 19 'read' 'key2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%key1_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %key1) nounwind" [xtea.cpp:28]   --->   Operation 20 'read' 'key1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%key0_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %key0) nounwind" [xtea.cpp:28]   --->   Operation 21 'read' 'key0_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%word1_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %word1) nounwind" [xtea.cpp:28]   --->   Operation 22 'read' 'word1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%word0_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %word0) nounwind" [xtea.cpp:28]   --->   Operation 23 'read' 'word0_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "br i1 %mode_read, label %.preheader.preheader, label %.preheader1.preheader" [xtea.cpp:41]   --->   Operation 24 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (1.76ns)   --->   "br label %.preheader1" [xtea.cpp:44]   --->   Operation 25 'br' <Predicate = (!mode_read)> <Delay = 1.76>
ST_1 : Operation 26 [1/1] (1.76ns)   --->   "br label %.preheader" [xtea.cpp:75]   --->   Operation 26 'br' <Predicate = (mode_read)> <Delay = 1.76>

State 2 <SV = 1> <Delay = 5.73>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%sum_0 = phi i37 [ %sum_2, %_ifconv ], [ 0, %.preheader1.preheader ]"   --->   Operation 27 'phi' 'sum_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%i_0 = phi i6 [ %i_2, %_ifconv ], [ 0, %.preheader1.preheader ]"   --->   Operation 28 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%v0_0 = phi i32 [ %v0, %_ifconv ], [ %word0_read, %.preheader1.preheader ]"   --->   Operation 29 'phi' 'v0_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%v1_0 = phi i32 [ %v1_2, %_ifconv ], [ %word1_read, %.preheader1.preheader ]"   --->   Operation 30 'phi' 'v1_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (1.42ns)   --->   "%icmp_ln44 = icmp eq i6 %i_0, -32" [xtea.cpp:44]   --->   Operation 31 'icmp' 'icmp_ln44' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind"   --->   Operation 32 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (1.82ns)   --->   "%i_2 = add i6 %i_0, 1" [xtea.cpp:44]   --->   Operation 33 'add' 'i_2' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "br i1 %icmp_ln44, label %.loopexit.loopexit16, label %_ifconv" [xtea.cpp:44]   --->   Operation 34 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%trunc_ln44 = trunc i37 %sum_0 to i2" [xtea.cpp:44]   --->   Operation 35 'trunc' 'trunc_ln44' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.95ns)   --->   "%icmp_ln47 = icmp eq i2 %trunc_ln44, 0" [xtea.cpp:47]   --->   Operation 36 'icmp' 'icmp_ln47' <Predicate = (!icmp_ln44)> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.95ns)   --->   "%icmp_ln49 = icmp eq i2 %trunc_ln44, 1" [xtea.cpp:49]   --->   Operation 37 'icmp' 'icmp_ln49' <Predicate = (!icmp_ln44)> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.95ns)   --->   "%icmp_ln51 = icmp eq i2 %trunc_ln44, -2" [xtea.cpp:51]   --->   Operation 38 'icmp' 'icmp_ln51' <Predicate = (!icmp_ln44)> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node and_ln49)   --->   "%xor_ln47 = xor i1 %icmp_ln47, true" [xtea.cpp:47]   --->   Operation 39 'xor' 'xor_ln47' <Predicate = (!icmp_ln44)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln49 = and i1 %icmp_ln49, %xor_ln47" [xtea.cpp:49]   --->   Operation 40 'and' 'and_ln49' <Predicate = (!icmp_ln44)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node select_ln49_2)   --->   "%select_ln49 = select i1 %and_ln49, i32 %key1_read, i32 %key0_read" [xtea.cpp:49]   --->   Operation 41 'select' 'select_ln49' <Predicate = (!icmp_ln44)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node select_ln49_2)   --->   "%or_ln49 = or i1 %and_ln49, %icmp_ln47" [xtea.cpp:49]   --->   Operation 42 'or' 'or_ln49' <Predicate = (!icmp_ln44)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln49_1 = select i1 %icmp_ln51, i32 %key2_read, i32 %key3_read" [xtea.cpp:49]   --->   Operation 43 'select' 'select_ln49_1' <Predicate = (!icmp_ln44)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln49_2 = select i1 %or_ln49, i32 %select_ln49, i32 %select_ln49_1" [xtea.cpp:49]   --->   Operation 44 'select' 'select_ln49_2' <Predicate = (!icmp_ln44)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.00ns) (grouped into LUT with out node add_ln55)   --->   "%shl_ln55 = shl i32 %v1_0, 4" [xtea.cpp:55]   --->   Operation 45 'shl' 'shl_ln55' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node add_ln55)   --->   "%lshr_ln2 = call i27 @_ssdm_op_PartSelect.i27.i32.i32.i32(i32 %v1_0, i32 5, i32 31)" [xtea.cpp:55]   --->   Operation 46 'partselect' 'lshr_ln2' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node add_ln55)   --->   "%zext_ln55 = zext i27 %lshr_ln2 to i32" [xtea.cpp:55]   --->   Operation 47 'zext' 'zext_ln55' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node add_ln55)   --->   "%xor_ln55 = xor i32 %shl_ln55, %zext_ln55" [xtea.cpp:55]   --->   Operation 48 'xor' 'xor_ln55' <Predicate = (!icmp_ln44)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln55 = add i32 %xor_ln55, %v1_0" [xtea.cpp:55]   --->   Operation 49 'add' 'add_ln55' <Predicate = (!icmp_ln44)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%trunc_ln55 = trunc i37 %sum_0 to i32" [xtea.cpp:55]   --->   Operation 50 'trunc' 'trunc_ln55' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln55_1 = add i32 %select_ln49_2, %trunc_ln55" [xtea.cpp:55]   --->   Operation 51 'add' 'add_ln55_1' <Predicate = (!icmp_ln44)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%trunc_ln57 = trunc i37 %sum_0 to i13" [xtea.cpp:57]   --->   Operation 52 'trunc' 'trunc_ln57' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (2.75ns)   --->   "%sum_2 = add i37 2654435769, %sum_0" [xtea.cpp:57]   --->   Operation 53 'add' 'sum_2' <Predicate = (!icmp_ln44)> <Delay = 2.75> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (1.67ns)   --->   "%add_ln57_1 = add i13 -1607, %trunc_ln57" [xtea.cpp:57]   --->   Operation 54 'add' 'add_ln57_1' <Predicate = (!icmp_ln44)> <Delay = 1.67> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%tmp_4 = call i2 @_ssdm_op_PartSelect.i2.i13.i32.i32(i13 %add_ln57_1, i32 11, i32 12)" [xtea.cpp:59]   --->   Operation 55 'partselect' 'tmp_4' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%and_ln1 = call i13 @_ssdm_op_BitConcatenate.i13.i2.i11(i2 %tmp_4, i11 0)" [xtea.cpp:59]   --->   Operation 56 'bitconcatenate' 'and_ln1' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (2.09ns)   --->   "%icmp_ln59 = icmp eq i13 %and_ln1, 0" [xtea.cpp:59]   --->   Operation 57 'icmp' 'icmp_ln59' <Predicate = (!icmp_ln44)> <Delay = 2.09> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (2.09ns)   --->   "%icmp_ln61 = icmp eq i13 %and_ln1, 2048" [xtea.cpp:61]   --->   Operation 58 'icmp' 'icmp_ln61' <Predicate = (!icmp_ln44)> <Delay = 2.09> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (2.09ns)   --->   "%icmp_ln63 = icmp eq i13 %and_ln1, -4096" [xtea.cpp:63]   --->   Operation 59 'icmp' 'icmp_ln63' <Predicate = (!icmp_ln44)> <Delay = 2.09> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node and_ln61)   --->   "%xor_ln59 = xor i1 %icmp_ln59, true" [xtea.cpp:59]   --->   Operation 60 'xor' 'xor_ln59' <Predicate = (!icmp_ln44)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln61 = and i1 %icmp_ln61, %xor_ln59" [xtea.cpp:61]   --->   Operation 61 'and' 'and_ln61' <Predicate = (!icmp_ln44)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.00ns) (grouped into LUT with out node select_ln61_2)   --->   "%select_ln61 = select i1 %and_ln61, i32 %key1_read, i32 %key0_read" [xtea.cpp:61]   --->   Operation 62 'select' 'select_ln61' <Predicate = (!icmp_ln44)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node select_ln61_2)   --->   "%or_ln61 = or i1 %and_ln61, %icmp_ln59" [xtea.cpp:61]   --->   Operation 63 'or' 'or_ln61' <Predicate = (!icmp_ln44)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 64 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln61_1 = select i1 %icmp_ln63, i32 %key2_read, i32 %key3_read" [xtea.cpp:61]   --->   Operation 64 'select' 'select_ln61_1' <Predicate = (!icmp_ln44)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln61_2 = select i1 %or_ln61, i32 %select_ln61, i32 %select_ln61_1" [xtea.cpp:61]   --->   Operation 65 'select' 'select_ln61_2' <Predicate = (!icmp_ln44)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (1.76ns)   --->   "br label %.loopexit"   --->   Operation 66 'br' <Predicate = (icmp_ln44)> <Delay = 1.76>

State 3 <SV = 2> <Delay = 7.65>
ST_3 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node v0)   --->   "%xor_ln55_1 = xor i32 %add_ln55_1, %add_ln55" [xtea.cpp:55]   --->   Operation 67 'xor' 'xor_ln55_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 68 [1/1] (2.55ns) (out node of the LUT)   --->   "%v0 = add i32 %xor_ln55_1, %v0_0" [xtea.cpp:55]   --->   Operation 68 'add' 'v0' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node add_ln67)   --->   "%shl_ln67 = shl i32 %v0, 4" [xtea.cpp:67]   --->   Operation 69 'shl' 'shl_ln67' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node add_ln67)   --->   "%lshr_ln3 = call i27 @_ssdm_op_PartSelect.i27.i32.i32.i32(i32 %v0, i32 5, i32 31)" [xtea.cpp:67]   --->   Operation 70 'partselect' 'lshr_ln3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node add_ln67)   --->   "%zext_ln67 = zext i27 %lshr_ln3 to i32" [xtea.cpp:67]   --->   Operation 71 'zext' 'zext_ln67' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node add_ln67)   --->   "%xor_ln67 = xor i32 %shl_ln67, %zext_ln67" [xtea.cpp:67]   --->   Operation 72 'xor' 'xor_ln67' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 73 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln67 = add i32 %v0, %xor_ln67" [xtea.cpp:67]   --->   Operation 73 'add' 'add_ln67' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 74 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln67_2 = add i32 -1640531527, %select_ln61_2" [xtea.cpp:67]   --->   Operation 74 'add' 'add_ln67_2' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 75 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln67_1 = add i32 %add_ln67_2, %trunc_ln55" [xtea.cpp:67]   --->   Operation 75 'add' 'add_ln67_1' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 76 [1/1] (0.00ns) (grouped into LUT with out node v1_2)   --->   "%xor_ln67_1 = xor i32 %add_ln67_1, %add_ln67" [xtea.cpp:67]   --->   Operation 76 'xor' 'xor_ln67_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 77 [1/1] (2.55ns) (out node of the LUT)   --->   "%v1_2 = add i32 %xor_ln67_1, %v1_0" [xtea.cpp:67]   --->   Operation 77 'add' 'v1_2' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 78 [1/1] (0.00ns)   --->   "br label %.preheader1" [xtea.cpp:44]   --->   Operation 78 'br' <Predicate = true> <Delay = 0.00>

State 4 <SV = 1> <Delay = 6.60>
ST_4 : Operation 79 [1/1] (0.00ns)   --->   "%sum_1 = phi i38 [ %sum, %_ifconv8 ], [ 3337565984, %.preheader.preheader ]"   --->   Operation 79 'phi' 'sum_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 80 [1/1] (0.00ns)   --->   "%i_1 = phi i6 [ %i, %_ifconv8 ], [ 0, %.preheader.preheader ]"   --->   Operation 80 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 81 [1/1] (0.00ns)   --->   "%v0_1 = phi i32 [ %v0_2, %_ifconv8 ], [ %word0_read, %.preheader.preheader ]"   --->   Operation 81 'phi' 'v0_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 82 [1/1] (0.00ns)   --->   "%v1_1 = phi i32 [ %v1, %_ifconv8 ], [ %word1_read, %.preheader.preheader ]"   --->   Operation 82 'phi' 'v1_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 83 [1/1] (1.42ns)   --->   "%icmp_ln75 = icmp eq i6 %i_1, -32" [xtea.cpp:75]   --->   Operation 83 'icmp' 'icmp_ln75' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 84 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind"   --->   Operation 84 'speclooptripcount' 'empty_8' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 85 [1/1] (1.82ns)   --->   "%i = add i6 %i_1, 1" [xtea.cpp:75]   --->   Operation 85 'add' 'i' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 86 [1/1] (0.00ns)   --->   "br i1 %icmp_ln75, label %.loopexit.loopexit, label %_ifconv8" [xtea.cpp:75]   --->   Operation 86 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 87 [1/1] (0.00ns)   --->   "%tmp = call i2 @_ssdm_op_PartSelect.i2.i38.i32.i32(i38 %sum_1, i32 11, i32 12)" [xtea.cpp:77]   --->   Operation 87 'partselect' 'tmp' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_4 : Operation 88 [1/1] (0.00ns)   --->   "%and_ln = call i13 @_ssdm_op_BitConcatenate.i13.i2.i11(i2 %tmp, i11 0)" [xtea.cpp:77]   --->   Operation 88 'bitconcatenate' 'and_ln' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_4 : Operation 89 [1/1] (2.09ns)   --->   "%icmp_ln77 = icmp eq i13 %and_ln, 0" [xtea.cpp:77]   --->   Operation 89 'icmp' 'icmp_ln77' <Predicate = (!icmp_ln75)> <Delay = 2.09> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 90 [1/1] (2.09ns)   --->   "%icmp_ln79 = icmp eq i13 %and_ln, 2048" [xtea.cpp:79]   --->   Operation 90 'icmp' 'icmp_ln79' <Predicate = (!icmp_ln75)> <Delay = 2.09> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 91 [1/1] (2.09ns)   --->   "%icmp_ln81 = icmp eq i13 %and_ln, -4096" [xtea.cpp:81]   --->   Operation 91 'icmp' 'icmp_ln81' <Predicate = (!icmp_ln75)> <Delay = 2.09> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 92 [1/1] (0.00ns) (grouped into LUT with out node and_ln79)   --->   "%xor_ln77 = xor i1 %icmp_ln77, true" [xtea.cpp:77]   --->   Operation 92 'xor' 'xor_ln77' <Predicate = (!icmp_ln75)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 93 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln79 = and i1 %icmp_ln79, %xor_ln77" [xtea.cpp:79]   --->   Operation 93 'and' 'and_ln79' <Predicate = (!icmp_ln75)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node select_ln79_2)   --->   "%select_ln79 = select i1 %and_ln79, i32 %key1_read, i32 %key0_read" [xtea.cpp:79]   --->   Operation 94 'select' 'select_ln79' <Predicate = (!icmp_ln75)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node select_ln79_2)   --->   "%or_ln79 = or i1 %and_ln79, %icmp_ln77" [xtea.cpp:79]   --->   Operation 95 'or' 'or_ln79' <Predicate = (!icmp_ln75)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 96 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln79_1 = select i1 %icmp_ln81, i32 %key2_read, i32 %key3_read" [xtea.cpp:79]   --->   Operation 96 'select' 'select_ln79_1' <Predicate = (!icmp_ln75)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 97 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln79_2 = select i1 %or_ln79, i32 %select_ln79, i32 %select_ln79_1" [xtea.cpp:79]   --->   Operation 97 'select' 'select_ln79_2' <Predicate = (!icmp_ln75)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 98 [1/1] (0.00ns) (grouped into LUT with out node add_ln85)   --->   "%shl_ln85 = shl i32 %v0_1, 4" [xtea.cpp:85]   --->   Operation 98 'shl' 'shl_ln85' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_4 : Operation 99 [1/1] (0.00ns) (grouped into LUT with out node add_ln85)   --->   "%lshr_ln = call i27 @_ssdm_op_PartSelect.i27.i32.i32.i32(i32 %v0_1, i32 5, i32 31)" [xtea.cpp:85]   --->   Operation 99 'partselect' 'lshr_ln' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_4 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node add_ln85)   --->   "%zext_ln85 = zext i27 %lshr_ln to i32" [xtea.cpp:85]   --->   Operation 100 'zext' 'zext_ln85' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_4 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node add_ln85)   --->   "%xor_ln85 = xor i32 %shl_ln85, %zext_ln85" [xtea.cpp:85]   --->   Operation 101 'xor' 'xor_ln85' <Predicate = (!icmp_ln75)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 102 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln85 = add i32 %xor_ln85, %v0_1" [xtea.cpp:85]   --->   Operation 102 'add' 'add_ln85' <Predicate = (!icmp_ln75)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 103 [1/1] (0.00ns)   --->   "%trunc_ln85 = trunc i38 %sum_1 to i32" [xtea.cpp:85]   --->   Operation 103 'trunc' 'trunc_ln85' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_4 : Operation 104 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln85_1 = add i32 %select_ln79_2, %trunc_ln85" [xtea.cpp:85]   --->   Operation 104 'add' 'add_ln85_1' <Predicate = (!icmp_ln75)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 105 [1/1] (0.00ns)   --->   "%trunc_ln87 = trunc i38 %sum_1 to i2" [xtea.cpp:87]   --->   Operation 105 'trunc' 'trunc_ln87' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_4 : Operation 106 [1/1] (2.79ns)   --->   "%sum = add i38 -2654435769, %sum_1" [xtea.cpp:87]   --->   Operation 106 'add' 'sum' <Predicate = (!icmp_ln75)> <Delay = 2.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 107 [1/1] (1.56ns)   --->   "%add_ln87_1 = add i2 -1, %trunc_ln87" [xtea.cpp:87]   --->   Operation 107 'add' 'add_ln87_1' <Predicate = (!icmp_ln75)> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 108 [1/1] (0.95ns)   --->   "%icmp_ln89 = icmp eq i2 %add_ln87_1, 0" [xtea.cpp:89]   --->   Operation 108 'icmp' 'icmp_ln89' <Predicate = (!icmp_ln75)> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 109 [1/1] (0.95ns)   --->   "%icmp_ln91 = icmp eq i2 %add_ln87_1, 1" [xtea.cpp:91]   --->   Operation 109 'icmp' 'icmp_ln91' <Predicate = (!icmp_ln75)> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 110 [1/1] (0.95ns)   --->   "%icmp_ln93 = icmp eq i2 %add_ln87_1, -2" [xtea.cpp:93]   --->   Operation 110 'icmp' 'icmp_ln93' <Predicate = (!icmp_ln75)> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 111 [1/1] (0.00ns) (grouped into LUT with out node and_ln91)   --->   "%xor_ln89 = xor i1 %icmp_ln89, true" [xtea.cpp:89]   --->   Operation 111 'xor' 'xor_ln89' <Predicate = (!icmp_ln75)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 112 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln91 = and i1 %icmp_ln91, %xor_ln89" [xtea.cpp:91]   --->   Operation 112 'and' 'and_ln91' <Predicate = (!icmp_ln75)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 113 [1/1] (0.00ns) (grouped into LUT with out node select_ln91_2)   --->   "%select_ln91 = select i1 %and_ln91, i32 %key1_read, i32 %key0_read" [xtea.cpp:91]   --->   Operation 113 'select' 'select_ln91' <Predicate = (!icmp_ln75)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 114 [1/1] (0.00ns) (grouped into LUT with out node select_ln91_2)   --->   "%or_ln91 = or i1 %and_ln91, %icmp_ln89" [xtea.cpp:91]   --->   Operation 114 'or' 'or_ln91' <Predicate = (!icmp_ln75)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 115 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln91_1 = select i1 %icmp_ln93, i32 %key2_read, i32 %key3_read" [xtea.cpp:91]   --->   Operation 115 'select' 'select_ln91_1' <Predicate = (!icmp_ln75)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 116 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln91_2 = select i1 %or_ln91, i32 %select_ln91, i32 %select_ln91_1" [xtea.cpp:91]   --->   Operation 116 'select' 'select_ln91_2' <Predicate = (!icmp_ln75)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 117 [1/1] (1.76ns)   --->   "br label %.loopexit"   --->   Operation 117 'br' <Predicate = (icmp_ln75)> <Delay = 1.76>

State 5 <SV = 2> <Delay = 7.65>
ST_5 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node v1)   --->   "%xor_ln85_1 = xor i32 %add_ln85_1, %add_ln85" [xtea.cpp:85]   --->   Operation 118 'xor' 'xor_ln85_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 119 [1/1] (2.55ns) (out node of the LUT)   --->   "%v1 = sub i32 %v1_1, %xor_ln85_1" [xtea.cpp:85]   --->   Operation 119 'sub' 'v1' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 120 [1/1] (0.00ns) (grouped into LUT with out node add_ln97)   --->   "%shl_ln97 = shl i32 %v1, 4" [xtea.cpp:97]   --->   Operation 120 'shl' 'shl_ln97' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node add_ln97)   --->   "%lshr_ln1 = call i27 @_ssdm_op_PartSelect.i27.i32.i32.i32(i32 %v1, i32 5, i32 31)" [xtea.cpp:97]   --->   Operation 121 'partselect' 'lshr_ln1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 122 [1/1] (0.00ns) (grouped into LUT with out node add_ln97)   --->   "%zext_ln97 = zext i27 %lshr_ln1 to i32" [xtea.cpp:97]   --->   Operation 122 'zext' 'zext_ln97' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 123 [1/1] (0.00ns) (grouped into LUT with out node add_ln97)   --->   "%xor_ln97 = xor i32 %shl_ln97, %zext_ln97" [xtea.cpp:97]   --->   Operation 123 'xor' 'xor_ln97' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 124 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln97 = add i32 %v1, %xor_ln97" [xtea.cpp:97]   --->   Operation 124 'add' 'add_ln97' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 125 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln97_2 = add i32 1640531527, %select_ln91_2" [xtea.cpp:97]   --->   Operation 125 'add' 'add_ln97_2' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 126 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln97_1 = add i32 %add_ln97_2, %trunc_ln85" [xtea.cpp:97]   --->   Operation 126 'add' 'add_ln97_1' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 127 [1/1] (0.00ns) (grouped into LUT with out node v0_2)   --->   "%xor_ln97_1 = xor i32 %add_ln97_1, %add_ln97" [xtea.cpp:97]   --->   Operation 127 'xor' 'xor_ln97_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 128 [1/1] (2.55ns) (out node of the LUT)   --->   "%v0_2 = sub i32 %v0_1, %xor_ln97_1" [xtea.cpp:97]   --->   Operation 128 'sub' 'v0_2' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 129 [1/1] (0.00ns)   --->   "br label %.preheader" [xtea.cpp:75]   --->   Operation 129 'br' <Predicate = true> <Delay = 0.00>

State 6 <SV = 2> <Delay = 0.00>
ST_6 : Operation 130 [1/1] (0.00ns)   --->   "%v0_3 = phi i32 [ %v0_1, %.loopexit.loopexit ], [ %v0_0, %.loopexit.loopexit16 ]" [xtea.cpp:97]   --->   Operation 130 'phi' 'v0_3' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 131 [1/1] (0.00ns)   --->   "%v1_3 = phi i32 [ %v1_1, %.loopexit.loopexit ], [ %v1_0, %.loopexit.loopexit16 ]" [xtea.cpp:85]   --->   Operation 131 'phi' 'v1_3' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 132 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %result0, i32 %v0_3) nounwind" [xtea.cpp:101]   --->   Operation 132 'write' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 133 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %result1, i32 %v1_3) nounwind" [xtea.cpp:102]   --->   Operation 133 'write' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 134 [1/1] (0.00ns)   --->   "ret void" [xtea.cpp:103]   --->   Operation 134 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('sum') with incoming values : ('sum', xtea.cpp:57) [31]  (1.77 ns)

 <State 2>: 5.74ns
The critical path consists of the following:
	'phi' operation ('sum') with incoming values : ('sum', xtea.cpp:57) [31]  (0 ns)
	'add' operation ('add_ln57_1', xtea.cpp:57) [61]  (1.68 ns)
	'icmp' operation ('icmp_ln59', xtea.cpp:59) [64]  (2.1 ns)
	'xor' operation ('xor_ln59', xtea.cpp:59) [67]  (0 ns)
	'and' operation ('and_ln61', xtea.cpp:61) [68]  (0.978 ns)
	'select' operation ('select_ln61', xtea.cpp:61) [69]  (0 ns)
	'select' operation ('select_ln61_2', xtea.cpp:61) [72]  (0.978 ns)

 <State 3>: 7.66ns
The critical path consists of the following:
	'xor' operation ('xor_ln55_1', xtea.cpp:55) [57]  (0 ns)
	'add' operation ('v0', xtea.cpp:55) [58]  (2.55 ns)
	'add' operation ('add_ln67', xtea.cpp:67) [77]  (2.55 ns)
	'xor' operation ('xor_ln67_1', xtea.cpp:67) [80]  (0 ns)
	'add' operation ('v1', xtea.cpp:67) [81]  (2.55 ns)

 <State 4>: 6.61ns
The critical path consists of the following:
	'phi' operation ('sum') with incoming values : ('sum', xtea.cpp:87) [88]  (0 ns)
	'icmp' operation ('icmp_ln79', xtea.cpp:79) [100]  (2.1 ns)
	'and' operation ('and_ln79', xtea.cpp:79) [103]  (0.978 ns)
	'select' operation ('select_ln79', xtea.cpp:79) [104]  (0 ns)
	'select' operation ('select_ln79_2', xtea.cpp:79) [107]  (0.978 ns)
	'add' operation ('add_ln85_1', xtea.cpp:85) [114]  (2.55 ns)

 <State 5>: 7.66ns
The critical path consists of the following:
	'xor' operation ('xor_ln85_1', xtea.cpp:85) [115]  (0 ns)
	'sub' operation ('v1', xtea.cpp:85) [116]  (2.55 ns)
	'add' operation ('add_ln97', xtea.cpp:97) [133]  (2.55 ns)
	'xor' operation ('xor_ln97_1', xtea.cpp:97) [136]  (0 ns)
	'sub' operation ('v0', xtea.cpp:97) [137]  (2.55 ns)

 <State 6>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
